{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"_TwfB5SbRlCl"},"source":["# **Calculating molecular fingerprints using padelpy**"]},{"cell_type":"markdown","source":["Here we apply another methods or chunk of code different from Part 3. "],"metadata":{"id":"Kw6C5Y2MPM12"}},{"cell_type":"markdown","metadata":{"id":"RvCr54uPSDxy"},"source":["# **Install padelpy**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NZV55YIz4BMx","outputId":"807a6db1-bf00-4ce6-d506-f6b5fc666fe4","executionInfo":{"status":"ok","timestamp":1662070429038,"user_tz":300,"elapsed":4140,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["! pip install padelpy"],"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: padelpy in /usr/local/lib/python3.7/dist-packages (0.1.11)\n"]}]},{"cell_type":"markdown","metadata":{"id":"K7AgkF1havzY"},"source":["# **Prepare fingerprint XML**"]},{"cell_type":"markdown","metadata":{"id":"OSY4PlfDSKi1"},"source":["### **Download fingerprint XML files**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZBXNlLXAA14q","outputId":"1d010328-66c2-47e8-88c7-b2312dcb9151","executionInfo":{"status":"ok","timestamp":1662070432363,"user_tz":300,"elapsed":473,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["! wget https://github.com/dataprofessor/padel/raw/main/fingerprints_xml.zip\n","! unzip fingerprints_xml.zip"],"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["--2022-09-01 22:13:51--  https://github.com/dataprofessor/padel/raw/main/fingerprints_xml.zip\n","Resolving github.com (github.com)... 140.82.113.3\n","Connecting to github.com (github.com)|140.82.113.3|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://raw.githubusercontent.com/dataprofessor/padel/main/fingerprints_xml.zip [following]\n","--2022-09-01 22:13:51--  https://raw.githubusercontent.com/dataprofessor/padel/main/fingerprints_xml.zip\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 10871 (11K) [application/zip]\n","Saving to: ‘fingerprints_xml.zip’\n","\n","\rfingerprints_xml.zi   0%[                    ]       0  --.-KB/s               \rfingerprints_xml.zi 100%[===================>]  10.62K  --.-KB/s    in 0s      \n","\n","2022-09-01 22:13:52 (61.1 MB/s) - ‘fingerprints_xml.zip’ saved [10871/10871]\n","\n","Archive:  fingerprints_xml.zip\n","  inflating: AtomPairs2DFingerprintCount.xml  \n","  inflating: AtomPairs2DFingerprinter.xml  \n","  inflating: EStateFingerprinter.xml  \n","  inflating: ExtendedFingerprinter.xml  \n","  inflating: Fingerprinter.xml       \n","  inflating: GraphOnlyFingerprinter.xml  \n","  inflating: KlekotaRothFingerprintCount.xml  \n","  inflating: KlekotaRothFingerprinter.xml  \n","  inflating: MACCSFingerprinter.xml  \n","  inflating: PubchemFingerprinter.xml  \n","  inflating: SubstructureFingerprintCount.xml  \n","  inflating: SubstructureFingerprinter.xml  \n"]}]},{"cell_type":"markdown","metadata":{"id":"AHkFjZ1sSSna"},"source":["### **List and sort fingerprint XML files**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-15LyfWQOUz1","outputId":"b3299734-dcdf-4f69-98ce-3bf66e847fa6","executionInfo":{"status":"ok","timestamp":1662070440002,"user_tz":300,"elapsed":189,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["import glob\n","xml_files = glob.glob(\"*.xml\")\n","xml_files.sort()\n","xml_files"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['AtomPairs2DFingerprintCount.xml',\n"," 'AtomPairs2DFingerprinter.xml',\n"," 'EStateFingerprinter.xml',\n"," 'ExtendedFingerprinter.xml',\n"," 'Fingerprinter.xml',\n"," 'GraphOnlyFingerprinter.xml',\n"," 'KlekotaRothFingerprintCount.xml',\n"," 'KlekotaRothFingerprinter.xml',\n"," 'MACCSFingerprinter.xml',\n"," 'PubchemFingerprinter.xml',\n"," 'SubstructureFingerprintCount.xml',\n"," 'SubstructureFingerprinter.xml']"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"LrCmuWI2ZYdk","executionInfo":{"status":"ok","timestamp":1662070443039,"user_tz":300,"elapsed":175,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["FP_list = ['AtomPairs2DCount',\n"," 'AtomPairs2D',\n"," 'EState',\n"," 'CDKextended',\n"," 'CDK',\n"," 'CDKgraphonly',\n"," 'KlekotaRothCount',\n"," 'KlekotaRoth',\n"," 'MACCS',\n"," 'PubChem',\n"," 'SubstructureCount',\n"," 'Substructure']"],"execution_count":36,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"86rnl7iha_8n"},"source":["### **Create a dictionary**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Ir_n8KlbMvs","outputId":"adaff7b1-4e08-4521-992c-030cc13423ff","executionInfo":{"status":"ok","timestamp":1662070445400,"user_tz":300,"elapsed":153,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["fp = dict(zip(FP_list, xml_files))\n","fp"],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'AtomPairs2DCount': 'AtomPairs2DFingerprintCount.xml',\n"," 'AtomPairs2D': 'AtomPairs2DFingerprinter.xml',\n"," 'EState': 'EStateFingerprinter.xml',\n"," 'CDKextended': 'ExtendedFingerprinter.xml',\n"," 'CDK': 'Fingerprinter.xml',\n"," 'CDKgraphonly': 'GraphOnlyFingerprinter.xml',\n"," 'KlekotaRothCount': 'KlekotaRothFingerprintCount.xml',\n"," 'KlekotaRoth': 'KlekotaRothFingerprinter.xml',\n"," 'MACCS': 'MACCSFingerprinter.xml',\n"," 'PubChem': 'PubchemFingerprinter.xml',\n"," 'SubstructureCount': 'SubstructureFingerprintCount.xml',\n"," 'Substructure': 'SubstructureFingerprinter.xml'}"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":37},"id":"vLD-W-YULMqb","outputId":"7c87e8a3-2786-48a3-cd67-e51430991a2c","executionInfo":{"status":"ok","timestamp":1662070447732,"user_tz":300,"elapsed":161,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["fp['AtomPairs2D']"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'AtomPairs2DFingerprinter.xml'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","metadata":{"id":"Lzw3bMBwShwd"},"source":["# **Load HCV dataset**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"HSaojt-N7wAB","outputId":"9607296c-d7f5-4fa1-fb42-867501c5a38f","executionInfo":{"status":"ok","timestamp":1662070451012,"user_tz":300,"elapsed":159,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["import pandas as pd\n","\n","df = pd.read_csv('/content/bioactivity_pIC50_ERA_new.csv')\n","df.head(5)"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  molecule_chembl_id                                   canonical_smiles  \\\n","0       CHEMBL100231  CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...   \n","1       CHEMBL100595  CC(C)c1cccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCC...   \n","2       CHEMBL100617  CC1(c2ccc(OCCN3CCCCC3)cc2)c2ccc(O)cc2CCN1c1ccc...   \n","3       CHEMBL100763  CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccc(...   \n","4          CHEMBL101              CCCCC1C(=O)N(c2ccccc2)N(c2ccccc2)C1=O   \n","\n","     pIC50  \n","0  7.71643  \n","1  7.56507  \n","2  8.31187  \n","3  8.02501  \n","4  4.30103  "],"text/html":["\n","  <div id=\"df-8c99d142-1ba3-4a54-b828-3b1d14b1ef25\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>pIC50</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL100231</td>\n","      <td>CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...</td>\n","      <td>7.71643</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL100595</td>\n","      <td>CC(C)c1cccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCC...</td>\n","      <td>7.56507</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL100617</td>\n","      <td>CC1(c2ccc(OCCN3CCCCC3)cc2)c2ccc(O)cc2CCN1c1ccc...</td>\n","      <td>8.31187</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL100763</td>\n","      <td>CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccc(...</td>\n","      <td>8.02501</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL101</td>\n","      <td>CCCCC1C(=O)N(c2ccccc2)N(c2ccccc2)C1=O</td>\n","      <td>4.30103</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c99d142-1ba3-4a54-b828-3b1d14b1ef25')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8c99d142-1ba3-4a54-b828-3b1d14b1ef25 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8c99d142-1ba3-4a54-b828-3b1d14b1ef25');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"pK-egpYgLq4X","outputId":"4413cbbb-886f-4244-b444-3bb1c6795f50","executionInfo":{"status":"ok","timestamp":1662070456611,"user_tz":300,"elapsed":151,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["df.tail(5)"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","2902        CHEMBL94225  Oc1cccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCNC3C...   \n","2903        CHEMBL94280   Oc1ccc2c(c1)CCN(Cc1ccccc1)C2c1ccc(OCCN2CCCC2)cc1   \n","2904          CHEMBL954    CCN(CC)CCOc1ccc(/C(=C(/Cl)c2ccccc2)c2ccccc2)cc1   \n","2905        CHEMBL98470  CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...   \n","2906        CHEMBL98558   CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccccc1   \n","\n","         pIC50  \n","2902  8.688375  \n","2903  8.327902  \n","2904  8.340654  \n","2905  7.970910  \n","2906  8.077480  "],"text/html":["\n","  <div id=\"df-aa13bff6-66d5-4eb8-b02d-b6fd5ca8f49f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>pIC50</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2902</th>\n","      <td>CHEMBL94225</td>\n","      <td>Oc1cccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCNC3C...</td>\n","      <td>8.688375</td>\n","    </tr>\n","    <tr>\n","      <th>2903</th>\n","      <td>CHEMBL94280</td>\n","      <td>Oc1ccc2c(c1)CCN(Cc1ccccc1)C2c1ccc(OCCN2CCCC2)cc1</td>\n","      <td>8.327902</td>\n","    </tr>\n","    <tr>\n","      <th>2904</th>\n","      <td>CHEMBL954</td>\n","      <td>CCN(CC)CCOc1ccc(/C(=C(/Cl)c2ccccc2)c2ccccc2)cc1</td>\n","      <td>8.340654</td>\n","    </tr>\n","    <tr>\n","      <th>2905</th>\n","      <td>CHEMBL98470</td>\n","      <td>CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...</td>\n","      <td>7.970910</td>\n","    </tr>\n","    <tr>\n","      <th>2906</th>\n","      <td>CHEMBL98558</td>\n","      <td>CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccccc1</td>\n","      <td>8.077480</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa13bff6-66d5-4eb8-b02d-b6fd5ca8f49f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aa13bff6-66d5-4eb8-b02d-b6fd5ca8f49f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aa13bff6-66d5-4eb8-b02d-b6fd5ca8f49f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","metadata":{"id":"xqrnC9hQSrf_"},"source":["# **Prepare data subset as input to PaDEL**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"ix1B4fUfBCCH","outputId":"286087cd-1a69-41f6-c1a1-23bab5df8550","executionInfo":{"status":"ok","timestamp":1662070619835,"user_tz":300,"elapsed":143,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["select = ['canonical_smiles', 'molecule_chembl_id',]\n","df2=df[select]\n","df2.to_csv('molecule.smi', sep='\\t', index=False, header=False)\n","df2"],"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                       canonical_smiles molecule_chembl_id\n","0     CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...       CHEMBL100231\n","1     CC(C)c1cccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCC...       CHEMBL100595\n","2     CC1(c2ccc(OCCN3CCCCC3)cc2)c2ccc(O)cc2CCN1c1ccc...       CHEMBL100617\n","3     CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccc(...       CHEMBL100763\n","4                 CCCCC1C(=O)N(c2ccccc2)N(c2ccccc2)C1=O          CHEMBL101\n","...                                                 ...                ...\n","2902  Oc1cccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCNC3C...        CHEMBL94225\n","2903   Oc1ccc2c(c1)CCN(Cc1ccccc1)C2c1ccc(OCCN2CCCC2)cc1        CHEMBL94280\n","2904    CCN(CC)CCOc1ccc(/C(=C(/Cl)c2ccccc2)c2ccccc2)cc1          CHEMBL954\n","2905  CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...        CHEMBL98470\n","2906   CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccccc1        CHEMBL98558\n","\n","[2907 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-bc8a409f-18ec-43a7-8b2d-7ecb58dea097\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>canonical_smiles</th>\n","      <th>molecule_chembl_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...</td>\n","      <td>CHEMBL100231</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CC(C)c1cccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCC...</td>\n","      <td>CHEMBL100595</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CC1(c2ccc(OCCN3CCCCC3)cc2)c2ccc(O)cc2CCN1c1ccc...</td>\n","      <td>CHEMBL100617</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccc(...</td>\n","      <td>CHEMBL100763</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CCCCC1C(=O)N(c2ccccc2)N(c2ccccc2)C1=O</td>\n","      <td>CHEMBL101</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2902</th>\n","      <td>Oc1cccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCNC3C...</td>\n","      <td>CHEMBL94225</td>\n","    </tr>\n","    <tr>\n","      <th>2903</th>\n","      <td>Oc1ccc2c(c1)CCN(Cc1ccccc1)C2c1ccc(OCCN2CCCC2)cc1</td>\n","      <td>CHEMBL94280</td>\n","    </tr>\n","    <tr>\n","      <th>2904</th>\n","      <td>CCN(CC)CCOc1ccc(/C(=C(/Cl)c2ccccc2)c2ccccc2)cc1</td>\n","      <td>CHEMBL954</td>\n","    </tr>\n","    <tr>\n","      <th>2905</th>\n","      <td>CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...</td>\n","      <td>CHEMBL98470</td>\n","    </tr>\n","    <tr>\n","      <th>2906</th>\n","      <td>CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccccc1</td>\n","      <td>CHEMBL98558</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2907 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc8a409f-18ec-43a7-8b2d-7ecb58dea097')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bc8a409f-18ec-43a7-8b2d-7ecb58dea097 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bc8a409f-18ec-43a7-8b2d-7ecb58dea097');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","metadata":{"id":"VeBPQ_TVTMe0"},"source":["# **Calculate descriptors**\n","\n","There are 12 fingerprint types in PaDEL. To calculate all 12, make sure to make adjustments to the ***descriptortypes*** input argument to any of the ones in the ***fp*** dictionary variable as shown above, e.g. *SubstructureFingerprintCount.xml*"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cIV6_RB3cE7J","outputId":"cb2586f3-666f-46dd-c014-fe110f714d4f","executionInfo":{"status":"ok","timestamp":1662070624848,"user_tz":300,"elapsed":149,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["fp"],"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'AtomPairs2DCount': 'AtomPairs2DFingerprintCount.xml',\n"," 'AtomPairs2D': 'AtomPairs2DFingerprinter.xml',\n"," 'EState': 'EStateFingerprinter.xml',\n"," 'CDKextended': 'ExtendedFingerprinter.xml',\n"," 'CDK': 'Fingerprinter.xml',\n"," 'CDKgraphonly': 'GraphOnlyFingerprinter.xml',\n"," 'KlekotaRothCount': 'KlekotaRothFingerprintCount.xml',\n"," 'KlekotaRoth': 'KlekotaRothFingerprinter.xml',\n"," 'MACCS': 'MACCSFingerprinter.xml',\n"," 'PubChem': 'PubchemFingerprinter.xml',\n"," 'SubstructureCount': 'SubstructureFingerprintCount.xml',\n"," 'Substructure': 'SubstructureFingerprinter.xml'}"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":37},"id":"bYYYcHevcHBA","outputId":"deb31c54-fe72-429b-b456-c1b91c7e0f0e","executionInfo":{"status":"ok","timestamp":1662070627500,"user_tz":300,"elapsed":150,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["fp['PubChem']"],"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'PubchemFingerprinter.xml'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","metadata":{"id":"g926DY4M4PdF","executionInfo":{"status":"ok","timestamp":1662070967082,"user_tz":300,"elapsed":338444,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["from padelpy import padeldescriptor\n","\n","fingerprint = 'Substructure'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv']) #Substructure.csv\n","fingerprint_descriptortypes = fp[fingerprint]\n","\n","padeldescriptor(mol_dir='molecule.smi', \n","                d_file=fingerprint_output_file, #'Substructure.csv'\n","                #descriptortypes='SubstructureFingerprint.xml', \n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"execution_count":49,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jEn8ayPAVM8f"},"source":["# **Display calculated fingerprints**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"kI5L4yRP4tke","outputId":"bae22ff4-43a0-4317-b576-0f6b171b9205","executionInfo":{"status":"ok","timestamp":1662071211956,"user_tz":300,"elapsed":188,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["descriptors_substructure = pd.read_csv(fingerprint_output_file)\n","descriptors_substructure"],"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Name  SubFP1  SubFP2  SubFP3  SubFP4  SubFP5  SubFP6  SubFP7  \\\n","0     CHEMBL100231       1       1       1       0       0       0       0   \n","1     CHEMBL100595       1       1       1       0       0       0       0   \n","2     CHEMBL100617       1       1       0       0       0       0       0   \n","3     CHEMBL100763       1       1       0       0       0       0       0   \n","4     CHEMBL101083       1       1       0       0       0       0       0   \n","...            ...     ...     ...     ...     ...     ...     ...     ...   \n","2902   CHEMBL94225       0       1       0       0       0       0       0   \n","2903   CHEMBL94280       0       1       0       0       0       0       0   \n","2904     CHEMBL954       1       0       0       0       0       0       0   \n","2905   CHEMBL98558       1       1       0       0       0       0       0   \n","2906   CHEMBL98470       1       1       1       0       0       0       0   \n","\n","      SubFP8  SubFP9  ...  SubFP298  SubFP299  SubFP300  SubFP301  SubFP302  \\\n","0          0       0  ...         0         0         1         1         1   \n","1          0       0  ...         0         0         1         1         1   \n","2          0       0  ...         0         0         1         1         1   \n","3          0       0  ...         0         0         1         1         1   \n","4          0       0  ...         0         0         1         1         1   \n","...      ...     ...  ...       ...       ...       ...       ...       ...   \n","2902       0       0  ...         0         0         1         1         1   \n","2903       0       0  ...         0         0         1         1         1   \n","2904       0       0  ...         0         0         1         1         1   \n","2905       0       0  ...         0         0         1         1         1   \n","2906       0       0  ...         0         0         1         1         1   \n","\n","      SubFP303  SubFP304  SubFP305  SubFP306  SubFP307  \n","0            0         0         0         0         1  \n","1            0         0         0         0         1  \n","2            0         0         0         0         1  \n","3            0         0         0         0         1  \n","4            0         0         0         0         1  \n","...        ...       ...       ...       ...       ...  \n","2902         0         0         0         0         1  \n","2903         0         0         0         0         1  \n","2904         0         0         0         0         1  \n","2905         0         0         0         0         1  \n","2906         0         0         0         0         1  \n","\n","[2907 rows x 308 columns]"],"text/html":["\n","  <div id=\"df-10971d4a-f8b8-4785-aefa-a222142a168c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>SubFP1</th>\n","      <th>SubFP2</th>\n","      <th>SubFP3</th>\n","      <th>SubFP4</th>\n","      <th>SubFP5</th>\n","      <th>SubFP6</th>\n","      <th>SubFP7</th>\n","      <th>SubFP8</th>\n","      <th>SubFP9</th>\n","      <th>...</th>\n","      <th>SubFP298</th>\n","      <th>SubFP299</th>\n","      <th>SubFP300</th>\n","      <th>SubFP301</th>\n","      <th>SubFP302</th>\n","      <th>SubFP303</th>\n","      <th>SubFP304</th>\n","      <th>SubFP305</th>\n","      <th>SubFP306</th>\n","      <th>SubFP307</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL100231</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL100595</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL100617</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL100763</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL101083</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2902</th>\n","      <td>CHEMBL94225</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2903</th>\n","      <td>CHEMBL94280</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2904</th>\n","      <td>CHEMBL954</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2905</th>\n","      <td>CHEMBL98558</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2906</th>\n","      <td>CHEMBL98470</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2907 rows × 308 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10971d4a-f8b8-4785-aefa-a222142a168c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-10971d4a-f8b8-4785-aefa-a222142a168c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-10971d4a-f8b8-4785-aefa-a222142a168c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","metadata":{"id":"iNWwQ-ZHnp-v"},"source":["# **Build a Random Forest Model**"]},{"cell_type":"code","metadata":{"id":"g2bEH5KIDrxB","executionInfo":{"status":"ok","timestamp":1662071450724,"user_tz":300,"elapsed":298,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["X_substructure = descriptors_substructure.drop('Name', axis=1)\n","y_substructure = df['pIC50']\n","dataset1 = pd.concat([X_substructure,y_substructure], axis=1)\n","dataset1\n","dataset1.to_csv('ERA_bioactivity_data_pIC50_substructure_fp.csv', index=False)"],"execution_count":54,"outputs":[]},{"cell_type":"code","metadata":{"id":"nyXWoG6dswDp","executionInfo":{"status":"ok","timestamp":1662071993170,"user_tz":300,"elapsed":350402,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["from padelpy import padeldescriptor\n","\n","fingerprint = 'SubstructureCount'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv']) #Substructure.csv\n","fingerprint_descriptortypes = fp[fingerprint]\n","\n","padeldescriptor(mol_dir='molecule.smi', \n","                d_file=fingerprint_output_file, #'Substructure.csv'\n","                #descriptortypes='SubstructureFingerprint.xml', \n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"execution_count":55,"outputs":[]},{"cell_type":"code","source":["descriptors_substructure_count = pd.read_csv(fingerprint_output_file)\n","descriptors_substructure_count"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"5gkwibLeL3af","executionInfo":{"status":"ok","timestamp":1662072313790,"user_tz":300,"elapsed":385,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}},"outputId":"0e755ac3-ffac-4dc5-91f2-188c816c084e"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Name  SubFPC1  SubFPC2  SubFPC3  SubFPC4  SubFPC5  SubFPC6  \\\n","0     CHEMBL100595      3.0      4.0      1.0      0.0      0.0      0.0   \n","1     CHEMBL100231      3.0      4.0      1.0      0.0      0.0      0.0   \n","2     CHEMBL100763      1.0      3.0      0.0      0.0      0.0      0.0   \n","3     CHEMBL100617      1.0      4.0      0.0      0.0      0.0      0.0   \n","4     CHEMBL101083      1.0      4.0      0.0      0.0      0.0      0.0   \n","...            ...      ...      ...      ...      ...      ...      ...   \n","2902   CHEMBL94225      0.0      6.0      0.0      0.0      0.0      0.0   \n","2903   CHEMBL94280      0.0      3.0      0.0      0.0      0.0      0.0   \n","2904     CHEMBL954      2.0      0.0      0.0      0.0      0.0      0.0   \n","2905   CHEMBL98558      1.0      3.0      0.0      0.0      0.0      0.0   \n","2906   CHEMBL98470      3.0      3.0      1.0      0.0      0.0      0.0   \n","\n","      SubFPC7  SubFPC8  SubFPC9  ...  SubFPC298  SubFPC299  SubFPC300  \\\n","0         0.0      0.0      0.0  ...        0.0        0.0       17.0   \n","1         0.0      0.0      0.0  ...        0.0        0.0       17.0   \n","2         0.0      0.0      0.0  ...        0.0        0.0       13.0   \n","3         0.0      0.0      0.0  ...        0.0        0.0       15.0   \n","4         0.0      0.0      0.0  ...        0.0        0.0       14.0   \n","...       ...      ...      ...  ...        ...        ...        ...   \n","2902      0.0      0.0      0.0  ...        0.0        0.0       18.0   \n","2903      0.0      0.0      0.0  ...        0.0        0.0       17.0   \n","2904      0.0      0.0      0.0  ...        0.0        0.0        7.0   \n","2905      0.0      0.0      0.0  ...        0.0        0.0       13.0   \n","2906      0.0      0.0      0.0  ...        0.0        0.0       16.0   \n","\n","      SubFPC301  SubFPC302  SubFPC303  SubFPC304  SubFPC305  SubFPC306  \\\n","0          17.0        7.0        0.0        0.0        0.0        0.0   \n","1          17.0        7.0        0.0        0.0        0.0        0.0   \n","2          13.0        6.0        0.0        0.0        0.0        0.0   \n","3          15.0        6.0        0.0        0.0        0.0        0.0   \n","4          14.0        6.0        0.0        0.0        0.0        0.0   \n","...         ...        ...        ...        ...        ...        ...   \n","2902       18.0        7.0        0.0        0.0        0.0        0.0   \n","2903       17.0        7.0        0.0        0.0        0.0        0.0   \n","2904        7.0        9.0        0.0        0.0        0.0        0.0   \n","2905       13.0        6.0        0.0        0.0        0.0        0.0   \n","2906       16.0        7.0        0.0        0.0        0.0        0.0   \n","\n","      SubFPC307  \n","0          22.0  \n","1          22.0  \n","2          21.0  \n","3          21.0  \n","4          21.0  \n","...         ...  \n","2902       22.0  \n","2903       21.0  \n","2904       21.0  \n","2905       21.0  \n","2906       22.0  \n","\n","[2907 rows x 308 columns]"],"text/html":["\n","  <div id=\"df-263cab33-8f56-4c04-83a4-9ae1cf8198d3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>SubFPC1</th>\n","      <th>SubFPC2</th>\n","      <th>SubFPC3</th>\n","      <th>SubFPC4</th>\n","      <th>SubFPC5</th>\n","      <th>SubFPC6</th>\n","      <th>SubFPC7</th>\n","      <th>SubFPC8</th>\n","      <th>SubFPC9</th>\n","      <th>...</th>\n","      <th>SubFPC298</th>\n","      <th>SubFPC299</th>\n","      <th>SubFPC300</th>\n","      <th>SubFPC301</th>\n","      <th>SubFPC302</th>\n","      <th>SubFPC303</th>\n","      <th>SubFPC304</th>\n","      <th>SubFPC305</th>\n","      <th>SubFPC306</th>\n","      <th>SubFPC307</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL100595</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>17.0</td>\n","      <td>17.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL100231</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>17.0</td>\n","      <td>17.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL100763</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL100617</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL101083</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>14.0</td>\n","      <td>14.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2902</th>\n","      <td>CHEMBL94225</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>18.0</td>\n","      <td>18.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>2903</th>\n","      <td>CHEMBL94280</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>17.0</td>\n","      <td>17.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>2904</th>\n","      <td>CHEMBL954</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>7.0</td>\n","      <td>9.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>2905</th>\n","      <td>CHEMBL98558</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>2906</th>\n","      <td>CHEMBL98470</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","      <td>16.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>22.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2907 rows × 308 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-263cab33-8f56-4c04-83a4-9ae1cf8198d3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-263cab33-8f56-4c04-83a4-9ae1cf8198d3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-263cab33-8f56-4c04-83a4-9ae1cf8198d3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["X_substructure_count = descriptors_substructure_count.drop('Name', axis=1)\n","y_substructure_count = df['pIC50']\n","dataset2 = pd.concat([X_substructure_count,y_substructure_count], axis=1)\n","dataset2\n","dataset2.to_csv('ERA_bioactivity_data_pIC50_substructure_count_fp.csv', index=False)"],"metadata":{"id":"M0mQaG-AL-al","executionInfo":{"status":"ok","timestamp":1662072328367,"user_tz":300,"elapsed":671,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"execution_count":57,"outputs":[]}]}