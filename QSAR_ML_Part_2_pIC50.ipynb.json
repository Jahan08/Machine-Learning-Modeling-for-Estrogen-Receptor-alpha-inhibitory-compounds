{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"QSAR_ML_Part_2_pIC50.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"l0Y7_lgN4jzM"},"source":["# **Bioinformatics Project - Computational Drug Discovery [Part 2] pIC50**\n","\n","Nusrat Jahan\n","\n","In this Jupyter notebook, we will be building a real-life data science project, we will be building a machine learning model using the CheMBL bioactivity data.\n"," \n","In **Part 2**, we will be performing more data processing and converting IC50 and pIC50.\n","\n","---"]},{"cell_type":"markdown","metadata":{"id":"o-4IOizard4P"},"source":["## **Install conda and rdkit**"]},{"cell_type":"code","metadata":{"id":"H0mjQ2PcrSe5","outputId":"2f9384f5-b469-4fce-e332-780378c08948","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661971743349,"user_tz":300,"elapsed":50651,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["! wget https://repo.anaconda.com/miniconda/Miniconda3-py37_4.8.2-Linux-x86_64.sh\n","! chmod +x Miniconda3-py37_4.8.2-Linux-x86_64.sh\n","! bash ./Miniconda3-py37_4.8.2-Linux-x86_64.sh -b -f -p /usr/local\n","! conda install -c rdkit rdkit -y\n","import sys\n","sys.path.append('/usr/local/lib/python3.7/site-packages/')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["--2022-08-31 18:48:12--  https://repo.anaconda.com/miniconda/Miniconda3-py37_4.8.2-Linux-x86_64.sh\n","Resolving repo.anaconda.com (repo.anaconda.com)... 104.16.131.3, 104.16.130.3, 2606:4700::6810:8303, ...\n","Connecting to repo.anaconda.com (repo.anaconda.com)|104.16.131.3|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 85055499 (81M) [application/x-sh]\n","Saving to: ‘Miniconda3-py37_4.8.2-Linux-x86_64.sh’\n","\n","Miniconda3-py37_4.8 100%[===================>]  81.12M  40.5MB/s    in 2.0s    \n","\n","2022-08-31 18:48:14 (40.5 MB/s) - ‘Miniconda3-py37_4.8.2-Linux-x86_64.sh’ saved [85055499/85055499]\n","\n","PREFIX=/usr/local\n","Unpacking payload ...\n","Collecting package metadata (current_repodata.json): - \b\b\\ \b\b| \b\bdone\n","Solving environment: - \b\b\\ \b\bdone\n","\n","## Package Plan ##\n","\n","  environment location: /usr/local\n","\n","  added / updated specs:\n","    - _libgcc_mutex==0.1=main\n","    - asn1crypto==1.3.0=py37_0\n","    - ca-certificates==2020.1.1=0\n","    - certifi==2019.11.28=py37_0\n","    - cffi==1.14.0=py37h2e261b9_0\n","    - chardet==3.0.4=py37_1003\n","    - conda-package-handling==1.6.0=py37h7b6447c_0\n","    - conda==4.8.2=py37_0\n","    - cryptography==2.8=py37h1ba5d50_0\n","    - idna==2.8=py37_0\n","    - ld_impl_linux-64==2.33.1=h53a641e_7\n","    - libedit==3.1.20181209=hc058e9b_0\n","    - libffi==3.2.1=hd88cf55_4\n","    - libgcc-ng==9.1.0=hdf63c60_0\n","    - libstdcxx-ng==9.1.0=hdf63c60_0\n","    - ncurses==6.2=he6710b0_0\n","    - openssl==1.1.1d=h7b6447c_4\n","    - pip==20.0.2=py37_1\n","    - pycosat==0.6.3=py37h7b6447c_0\n","    - pycparser==2.19=py37_0\n","    - pyopenssl==19.1.0=py37_0\n","    - pysocks==1.7.1=py37_0\n","    - python==3.7.6=h0371630_2\n","    - readline==7.0=h7b6447c_5\n","    - requests==2.22.0=py37_1\n","    - ruamel_yaml==0.15.87=py37h7b6447c_0\n","    - setuptools==45.2.0=py37_0\n","    - six==1.14.0=py37_0\n","    - sqlite==3.31.1=h7b6447c_0\n","    - tk==8.6.8=hbc83047_0\n","    - tqdm==4.42.1=py_0\n","    - urllib3==1.25.8=py37_0\n","    - wheel==0.34.2=py37_0\n","    - xz==5.2.4=h14c3975_4\n","    - yaml==0.1.7=had09818_2\n","    - zlib==1.2.11=h7b6447c_3\n","\n","\n","The following NEW packages will be INSTALLED:\n","\n","  _libgcc_mutex      pkgs/main/linux-64::_libgcc_mutex-0.1-main\n","  asn1crypto         pkgs/main/linux-64::asn1crypto-1.3.0-py37_0\n","  ca-certificates    pkgs/main/linux-64::ca-certificates-2020.1.1-0\n","  certifi            pkgs/main/linux-64::certifi-2019.11.28-py37_0\n","  cffi               pkgs/main/linux-64::cffi-1.14.0-py37h2e261b9_0\n","  chardet            pkgs/main/linux-64::chardet-3.0.4-py37_1003\n","  conda              pkgs/main/linux-64::conda-4.8.2-py37_0\n","  conda-package-han~ pkgs/main/linux-64::conda-package-handling-1.6.0-py37h7b6447c_0\n","  cryptography       pkgs/main/linux-64::cryptography-2.8-py37h1ba5d50_0\n","  idna               pkgs/main/linux-64::idna-2.8-py37_0\n","  ld_impl_linux-64   pkgs/main/linux-64::ld_impl_linux-64-2.33.1-h53a641e_7\n","  libedit            pkgs/main/linux-64::libedit-3.1.20181209-hc058e9b_0\n","  libffi             pkgs/main/linux-64::libffi-3.2.1-hd88cf55_4\n","  libgcc-ng          pkgs/main/linux-64::libgcc-ng-9.1.0-hdf63c60_0\n","  libstdcxx-ng       pkgs/main/linux-64::libstdcxx-ng-9.1.0-hdf63c60_0\n","  ncurses            pkgs/main/linux-64::ncurses-6.2-he6710b0_0\n","  openssl            pkgs/main/linux-64::openssl-1.1.1d-h7b6447c_4\n","  pip                pkgs/main/linux-64::pip-20.0.2-py37_1\n","  pycosat            pkgs/main/linux-64::pycosat-0.6.3-py37h7b6447c_0\n","  pycparser          pkgs/main/linux-64::pycparser-2.19-py37_0\n","  pyopenssl          pkgs/main/linux-64::pyopenssl-19.1.0-py37_0\n","  pysocks            pkgs/main/linux-64::pysocks-1.7.1-py37_0\n","  python             pkgs/main/linux-64::python-3.7.6-h0371630_2\n","  readline           pkgs/main/linux-64::readline-7.0-h7b6447c_5\n","  requests           pkgs/main/linux-64::requests-2.22.0-py37_1\n","  ruamel_yaml        pkgs/main/linux-64::ruamel_yaml-0.15.87-py37h7b6447c_0\n","  setuptools         pkgs/main/linux-64::setuptools-45.2.0-py37_0\n","  six                pkgs/main/linux-64::six-1.14.0-py37_0\n","  sqlite             pkgs/main/linux-64::sqlite-3.31.1-h7b6447c_0\n","  tk                 pkgs/main/linux-64::tk-8.6.8-hbc83047_0\n","  tqdm               pkgs/main/noarch::tqdm-4.42.1-py_0\n","  urllib3            pkgs/main/linux-64::urllib3-1.25.8-py37_0\n","  wheel              pkgs/main/linux-64::wheel-0.34.2-py37_0\n","  xz                 pkgs/main/linux-64::xz-5.2.4-h14c3975_4\n","  yaml               pkgs/main/linux-64::yaml-0.1.7-had09818_2\n","  zlib               pkgs/main/linux-64::zlib-1.2.11-h7b6447c_3\n","\n","\n","Preparing transaction: / \b\b- \b\b\\ \b\b| \b\bdone\n","Executing transaction: - \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\bdone\n","installation finished.\n","WARNING:\n","    You currently have a PYTHONPATH environment variable set. This may cause\n","    unexpected behavior when running the Python interpreter in Miniconda3.\n","    For best results, please verify that your PYTHONPATH only points to\n","    directories of packages that are compatible with the Python interpreter\n","    in Miniconda3: /usr/local\n","Collecting package metadata (current_repodata.json): - \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\bdone\n","Solving environment: - \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\bdone\n","\n","## Package Plan ##\n","\n","  environment location: /usr/local\n","\n","  added / updated specs:\n","    - rdkit\n","\n","\n","The following packages will be downloaded:\n","\n","    package                    |            build\n","    ---------------------------|-----------------\n","    blas-1.0                   |              mkl           6 KB\n","    bottleneck-1.3.4           |   py37hce1f21e_0         126 KB\n","    bzip2-1.0.8                |       h7b6447c_0          78 KB\n","    ca-certificates-2022.07.19 |       h06a4308_0         124 KB\n","    cairo-1.16.0               |       h19f5f5c_2         1.1 MB\n","    certifi-2022.6.15          |   py37h06a4308_0         153 KB\n","    conda-4.14.0               |   py37h06a4308_0         909 KB\n","    cytoolz-0.11.0             |   py37h7b6447c_0         328 KB\n","    fontconfig-2.13.1          |       h6c09931_0         250 KB\n","    freetype-2.11.0            |       h70c0345_0         618 KB\n","    giflib-5.2.1               |       h7b6447c_0          78 KB\n","    glib-2.69.1                |       h4ff587b_1         1.7 MB\n","    icu-58.2                   |       he6710b0_3        10.5 MB\n","    intel-openmp-2021.4.0      |    h06a4308_3561         4.2 MB\n","    jpeg-9e                    |       h7f8727e_0         240 KB\n","    lcms2-2.12                 |       h3be6417_0         312 KB\n","    libboost-1.73.0            |      h28710b8_12        13.8 MB\n","    libffi-3.3                 |       he6710b0_2          50 KB\n","    libpng-1.6.37              |       hbc83047_0         278 KB\n","    libtiff-4.2.0              |       h2818925_1         452 KB\n","    libuuid-1.0.3              |       h7f8727e_2          17 KB\n","    libwebp-1.2.2              |       h55f646e_0          80 KB\n","    libwebp-base-1.2.2         |       h7f8727e_0         440 KB\n","    libxcb-1.15                |       h7f8727e_0         505 KB\n","    libxml2-2.9.14             |       h74e7548_0         718 KB\n","    lz4-c-1.9.3                |       h295c915_1         185 KB\n","    mkl-2021.4.0               |     h06a4308_640       142.6 MB\n","    mkl-service-2.4.0          |   py37h7f8727e_0          56 KB\n","    mkl_fft-1.3.1              |   py37hd3c417c_0         172 KB\n","    mkl_random-1.2.2           |   py37h51133e4_0         287 KB\n","    numexpr-2.8.1              |   py37h6abb31d_0         123 KB\n","    numpy-1.21.5               |   py37he7a7128_2          10 KB\n","    numpy-base-1.21.5          |   py37hf524024_2         4.8 MB\n","    openssl-1.1.1q             |       h7f8727e_0         2.5 MB\n","    packaging-21.3             |     pyhd3eb1b0_0          36 KB\n","    pandas-1.3.5               |   py37h8c16a72_0         9.3 MB\n","    pcre-8.45                  |       h295c915_0         207 KB\n","    pillow-9.0.1               |   py37h22f2fdc_0         652 KB\n","    pixman-0.40.0              |       h7f8727e_1         373 KB\n","    py-boost-1.73.0            |  py37h51133e4_12         195 KB\n","    pyparsing-3.0.9            |   py37h06a4308_0         150 KB\n","    python-dateutil-2.8.2      |     pyhd3eb1b0_0         233 KB\n","    pytz-2022.1                |   py37h06a4308_0         196 KB\n","    rdkit-2020.09.1.0          |   py37hd50e099_1        25.8 MB  rdkit\n","    toolz-0.11.2               |     pyhd3eb1b0_0          49 KB\n","    xz-5.2.5                   |       h7f8727e_1         339 KB\n","    zlib-1.2.12                |       h7f8727e_2         106 KB\n","    zstd-1.5.2                 |       ha4553b6_0         488 KB\n","    ------------------------------------------------------------\n","                                           Total:       225.7 MB\n","\n","The following NEW packages will be INSTALLED:\n","\n","  blas               pkgs/main/linux-64::blas-1.0-mkl\n","  bottleneck         pkgs/main/linux-64::bottleneck-1.3.4-py37hce1f21e_0\n","  bzip2              pkgs/main/linux-64::bzip2-1.0.8-h7b6447c_0\n","  cairo              pkgs/main/linux-64::cairo-1.16.0-h19f5f5c_2\n","  cytoolz            pkgs/main/linux-64::cytoolz-0.11.0-py37h7b6447c_0\n","  fontconfig         pkgs/main/linux-64::fontconfig-2.13.1-h6c09931_0\n","  freetype           pkgs/main/linux-64::freetype-2.11.0-h70c0345_0\n","  giflib             pkgs/main/linux-64::giflib-5.2.1-h7b6447c_0\n","  glib               pkgs/main/linux-64::glib-2.69.1-h4ff587b_1\n","  icu                pkgs/main/linux-64::icu-58.2-he6710b0_3\n","  intel-openmp       pkgs/main/linux-64::intel-openmp-2021.4.0-h06a4308_3561\n","  jpeg               pkgs/main/linux-64::jpeg-9e-h7f8727e_0\n","  lcms2              pkgs/main/linux-64::lcms2-2.12-h3be6417_0\n","  libboost           pkgs/main/linux-64::libboost-1.73.0-h28710b8_12\n","  libpng             pkgs/main/linux-64::libpng-1.6.37-hbc83047_0\n","  libtiff            pkgs/main/linux-64::libtiff-4.2.0-h2818925_1\n","  libuuid            pkgs/main/linux-64::libuuid-1.0.3-h7f8727e_2\n","  libwebp            pkgs/main/linux-64::libwebp-1.2.2-h55f646e_0\n","  libwebp-base       pkgs/main/linux-64::libwebp-base-1.2.2-h7f8727e_0\n","  libxcb             pkgs/main/linux-64::libxcb-1.15-h7f8727e_0\n","  libxml2            pkgs/main/linux-64::libxml2-2.9.14-h74e7548_0\n","  lz4-c              pkgs/main/linux-64::lz4-c-1.9.3-h295c915_1\n","  mkl                pkgs/main/linux-64::mkl-2021.4.0-h06a4308_640\n","  mkl-service        pkgs/main/linux-64::mkl-service-2.4.0-py37h7f8727e_0\n","  mkl_fft            pkgs/main/linux-64::mkl_fft-1.3.1-py37hd3c417c_0\n","  mkl_random         pkgs/main/linux-64::mkl_random-1.2.2-py37h51133e4_0\n","  numexpr            pkgs/main/linux-64::numexpr-2.8.1-py37h6abb31d_0\n","  numpy              pkgs/main/linux-64::numpy-1.21.5-py37he7a7128_2\n","  numpy-base         pkgs/main/linux-64::numpy-base-1.21.5-py37hf524024_2\n","  packaging          pkgs/main/noarch::packaging-21.3-pyhd3eb1b0_0\n","  pandas             pkgs/main/linux-64::pandas-1.3.5-py37h8c16a72_0\n","  pcre               pkgs/main/linux-64::pcre-8.45-h295c915_0\n","  pillow             pkgs/main/linux-64::pillow-9.0.1-py37h22f2fdc_0\n","  pixman             pkgs/main/linux-64::pixman-0.40.0-h7f8727e_1\n","  py-boost           pkgs/main/linux-64::py-boost-1.73.0-py37h51133e4_12\n","  pyparsing          pkgs/main/linux-64::pyparsing-3.0.9-py37h06a4308_0\n","  python-dateutil    pkgs/main/noarch::python-dateutil-2.8.2-pyhd3eb1b0_0\n","  pytz               pkgs/main/linux-64::pytz-2022.1-py37h06a4308_0\n","  rdkit              rdkit/linux-64::rdkit-2020.09.1.0-py37hd50e099_1\n","  toolz              pkgs/main/noarch::toolz-0.11.2-pyhd3eb1b0_0\n","  zstd               pkgs/main/linux-64::zstd-1.5.2-ha4553b6_0\n","\n","The following packages will be UPDATED:\n","\n","  ca-certificates                                2020.1.1-0 --> 2022.07.19-h06a4308_0\n","  certifi                                 2019.11.28-py37_0 --> 2022.6.15-py37h06a4308_0\n","  conda                                        4.8.2-py37_0 --> 4.14.0-py37h06a4308_0\n","  libffi                                   3.2.1-hd88cf55_4 --> 3.3-he6710b0_2\n","  openssl                                 1.1.1d-h7b6447c_4 --> 1.1.1q-h7f8727e_0\n","  xz                                       5.2.4-h14c3975_4 --> 5.2.5-h7f8727e_1\n","  zlib                                    1.2.11-h7b6447c_3 --> 1.2.12-h7f8727e_2\n","\n","\n","\n","Downloading and Extracting Packages\n","libuuid-1.0.3        | 17 KB     | : 100% 1.0/1 [00:00<00:00,  9.98it/s]\n","lz4-c-1.9.3          | 185 KB    | : 100% 1.0/1 [00:00<00:00,  9.77it/s]\n","pandas-1.3.5         | 9.3 MB    | : 100% 1.0/1 [00:00<00:00,  2.08it/s]                \n","libxcb-1.15          | 505 KB    | : 100% 1.0/1 [00:00<00:00, 12.01it/s]\n","zstd-1.5.2           | 488 KB    | : 100% 1.0/1 [00:00<00:00, 10.61it/s]\n","icu-58.2             | 10.5 MB   | : 100% 1.0/1 [00:00<00:00,  1.87it/s]              \n","mkl_random-1.2.2     | 287 KB    | : 100% 1.0/1 [00:00<00:00, 14.42it/s]\n","cytoolz-0.11.0       | 328 KB    | : 100% 1.0/1 [00:00<00:00, 13.54it/s]\n","intel-openmp-2021.4. | 4.2 MB    | : 100% 1.0/1 [00:00<00:00,  4.96it/s]\n","lcms2-2.12           | 312 KB    | : 100% 1.0/1 [00:00<00:00, 13.93it/s]\n","libboost-1.73.0      | 13.8 MB   | : 100% 1.0/1 [00:01<00:00,  1.26s/it]              \n","libpng-1.6.37        | 278 KB    | : 100% 1.0/1 [00:00<00:00, 11.57it/s]\n","numexpr-2.8.1        | 123 KB    | : 100% 1.0/1 [00:00<00:00, 14.66it/s]\n","xz-5.2.5             | 339 KB    | : 100% 1.0/1 [00:00<00:00, 10.83it/s]\n","jpeg-9e              | 240 KB    | : 100% 1.0/1 [00:00<00:00, 13.88it/s]\n","mkl-2021.4.0         | 142.6 MB  | : 100% 1.0/1 [00:05<00:00,  5.89s/it]               \n","libwebp-base-1.2.2   | 440 KB    | : 100% 1.0/1 [00:00<00:00, 13.24it/s]\n","numpy-base-1.21.5    | 4.8 MB    | : 100% 1.0/1 [00:00<00:00,  3.21it/s]\n","bottleneck-1.3.4     | 126 KB    | : 100% 1.0/1 [00:00<00:00, 13.49it/s]\n","zlib-1.2.12          | 106 KB    | : 100% 1.0/1 [00:00<00:00, 16.95it/s]\n","libxml2-2.9.14       | 718 KB    | : 100% 1.0/1 [00:00<00:00, 10.37it/s]\n","toolz-0.11.2         | 49 KB     | : 100% 1.0/1 [00:00<00:00, 13.52it/s]\n","rdkit-2020.09.1.0    | 25.8 MB   | : 100% 1.0/1 [00:05<00:00,  5.83s/it]\n","libtiff-4.2.0        | 452 KB    | : 100% 1.0/1 [00:00<00:00, 13.21it/s]\n","blas-1.0             | 6 KB      | : 100% 1.0/1 [00:00<00:00, 15.08it/s]\n","pyparsing-3.0.9      | 150 KB    | : 100% 1.0/1 [00:00<00:00, 15.39it/s]\n","packaging-21.3       | 36 KB     | : 100% 1.0/1 [00:00<00:00, 15.89it/s]\n","ca-certificates-2022 | 124 KB    | : 100% 1.0/1 [00:00<00:00, 13.16it/s]\n","bzip2-1.0.8          | 78 KB     | : 100% 1.0/1 [00:00<00:00, 14.11it/s]\n","freetype-2.11.0      | 618 KB    | : 100% 1.0/1 [00:00<00:00, 12.62it/s]\n","certifi-2022.6.15    | 153 KB    | : 100% 1.0/1 [00:00<00:00, 15.96it/s]\n","giflib-5.2.1         | 78 KB     | : 100% 1.0/1 [00:00<00:00, 14.89it/s]\n","libffi-3.3           | 50 KB     | : 100% 1.0/1 [00:00<00:00, 15.97it/s]\n","mkl-service-2.4.0    | 56 KB     | : 100% 1.0/1 [00:00<00:00, 15.14it/s]\n","libwebp-1.2.2        | 80 KB     | : 100% 1.0/1 [00:00<00:00, 13.12it/s]\n","glib-2.69.1          | 1.7 MB    | : 100% 1.0/1 [00:00<00:00,  7.41it/s]\n","openssl-1.1.1q       | 2.5 MB    | : 100% 1.0/1 [00:00<00:00,  6.23it/s]\n","numpy-1.21.5         | 10 KB     | : 100% 1.0/1 [00:00<00:00, 15.53it/s]\n","pillow-9.0.1         | 652 KB    | : 100% 1.0/1 [00:00<00:00,  9.12it/s]\n","pytz-2022.1          | 196 KB    | : 100% 1.0/1 [00:00<00:00,  9.31it/s]\n","fontconfig-2.13.1    | 250 KB    | : 100% 1.0/1 [00:00<00:00, 12.45it/s]\n","mkl_fft-1.3.1        | 172 KB    | : 100% 1.0/1 [00:00<00:00, 14.90it/s]\n","cairo-1.16.0         | 1.1 MB    | : 100% 1.0/1 [00:00<00:00,  9.91it/s]\n","pixman-0.40.0        | 373 KB    | : 100% 1.0/1 [00:00<00:00, 12.10it/s]\n","pcre-8.45            | 207 KB    | : 100% 1.0/1 [00:00<00:00, 15.23it/s]\n","python-dateutil-2.8. | 233 KB    | : 100% 1.0/1 [00:00<00:00, 10.61it/s]\n","py-boost-1.73.0      | 195 KB    | : 100% 1.0/1 [00:00<00:00, 13.17it/s]\n","conda-4.14.0         | 909 KB    | : 100% 1.0/1 [00:00<00:00,  9.16it/s]\n","Preparing transaction: / \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\bdone\n","Verifying transaction: | \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\bdone\n","Executing transaction: | \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\bdone\n"]}]},{"cell_type":"markdown","metadata":{"id":"QmxXXFa4wTNG"},"source":["## **Load bioactivity data**"]},{"cell_type":"code","metadata":{"id":"Fpu5C7HlwV9s","executionInfo":{"status":"ok","timestamp":1661971758156,"user_tz":300,"elapsed":342,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["import pandas as pd"],"execution_count":2,"outputs":[]},{"cell_type":"code","source":["! pwd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J7IOwzCYuOQH","executionInfo":{"status":"ok","timestamp":1661971759975,"user_tz":300,"elapsed":186,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}},"outputId":"7c1cc587-984c-49f2-f5b6-a39270a80fcc"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["/content\n"]}]},{"cell_type":"code","metadata":{"id":"GCcE8J5XwjtB","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1661971772611,"user_tz":300,"elapsed":153,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}},"outputId":"53c2ba67-fe55-4339-a794-0d561e5f44d9"},"source":["df = pd.read_csv('/content/bioactivity_preprocessed_data_ERA_1.csv')\n","df"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL431611  Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...   \n","1          CHEMBL316132  Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...   \n","2          CHEMBL304552  Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...   \n","3           CHEMBL85881  Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...   \n","4           CHEMBL85536  Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...   \n","...                 ...                                                ...   \n","3904      CHEMBL4857695  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3905      CHEMBL4869947  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3906      CHEMBL4850252  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3907      CHEMBL4858474  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3908      CHEMBL4514203             O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1   \n","\n","      standard_value  \n","0                2.5  \n","1                7.5  \n","2                3.1  \n","3                3.9  \n","4                7.4  \n","...              ...  \n","3904          2205.0  \n","3905           329.0  \n","3906           261.0  \n","3907           199.0  \n","3908             2.5  \n","\n","[3909 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-888094df-654c-43bf-a58a-e0113f708a4e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>standard_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL431611</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...</td>\n","      <td>2.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL316132</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>7.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL304552</td>\n","      <td>Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...</td>\n","      <td>3.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL85881</td>\n","      <td>Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>3.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL85536</td>\n","      <td>Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...</td>\n","      <td>7.4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3904</th>\n","      <td>CHEMBL4857695</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>2205.0</td>\n","    </tr>\n","    <tr>\n","      <th>3905</th>\n","      <td>CHEMBL4869947</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>329.0</td>\n","    </tr>\n","    <tr>\n","      <th>3906</th>\n","      <td>CHEMBL4850252</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>261.0</td>\n","    </tr>\n","    <tr>\n","      <th>3907</th>\n","      <td>CHEMBL4858474</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>199.0</td>\n","    </tr>\n","    <tr>\n","      <th>3908</th>\n","      <td>CHEMBL4514203</td>\n","      <td>O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1</td>\n","      <td>2.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3909 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-888094df-654c-43bf-a58a-e0113f708a4e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-888094df-654c-43bf-a58a-e0113f708a4e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-888094df-654c-43bf-a58a-e0113f708a4e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"e0MLOedB6j96"},"source":["### **Convert IC50 to pIC50**\n","To allow **IC50** data to be more uniformly distributed, we will convert **IC50** to the negative logarithmic scale which is essentially **-log10(IC50)**.\n","\n","This custom function pIC50() will accept a DataFrame as input and will:\n","* Take the IC50 values from the ``standard_value`` column and converts it from nM to M by multiplying the value by 10$^{-9}$\n","* Take the molar value and apply -log10\n","* Delete the ``standard_value`` column and create a new ``pIC50`` column"]},{"cell_type":"code","metadata":{"id":"UXMuFQoQ4pZF","executionInfo":{"status":"ok","timestamp":1661971799174,"user_tz":300,"elapsed":146,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["# https://github.com/chaninlab/estrogen-receptor-alpha-qsar/blob/master/02_ER_alpha_RO5.ipynb\n","\n","import numpy as np\n","\n","def pIC50(input):\n","    pIC50 = []\n","\n","    for i in input['standard_value_norm']:\n","        molar = i*(10**-9) # Converts nM to M\n","        pIC50.append(-np.log10(molar))\n","\n","    input['pIC50'] = pIC50\n","    x = input.drop('standard_value_norm', 1)\n","        \n","    return x"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WU5Fh1h2OaJJ"},"source":["Point to note: Values greater than 100,000,000 will be fixed at 100,000,000 otherwise the negative logarithmic value will become negative."]},{"cell_type":"code","metadata":{"id":"QuUTFUpcR1wU","outputId":"adeb761c-9cc5-431a-ffa9-e1fede0b55dc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661971803945,"user_tz":300,"elapsed":199,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["df.standard_value.describe()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    3.909000e+03\n","mean     2.202800e+04\n","std      1.535920e+05\n","min      2.000000e-03\n","25%      7.500000e+00\n","50%      1.720000e+02\n","75%      5.000000e+03\n","max      5.000000e+06\n","Name: standard_value, dtype: float64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"QyiJ0to5N6Z_","outputId":"e2a19844-afd3-4915-93c3-581258900985","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661971808493,"user_tz":300,"elapsed":164,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["-np.log10( (10**-9)* 100000000 )"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"9S1aJkOYOP6K","outputId":"ccd33a65-49ea-4782-f811-10dff4165746","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661971809943,"user_tz":300,"elapsed":146,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["-np.log10( (10**-9)* 10000000000 )"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-1.0"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"iktHDDwtPDwl","executionInfo":{"status":"ok","timestamp":1661971812039,"user_tz":300,"elapsed":147,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["# to keep the value positive\n","def norm_value(input):\n","    norm = []\n","\n","    for i in input['standard_value']:\n","        if i > 100000000:\n","          i = 100000000\n","        norm.append(i)\n","\n","    input['standard_value_norm'] = norm\n","    x = input.drop('standard_value', 1)\n","        \n","    return x"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EkrTs7RfPsrH"},"source":["We will first apply the norm_value() function so that the values in the standard_value column is normalized."]},{"cell_type":"code","metadata":{"id":"EX2Mj2-ZP1Rj","outputId":"aaead64d-84f1-4ddf-9bc4-b6f8d81601d3","colab":{"base_uri":"https://localhost:8080/","height":473},"executionInfo":{"status":"ok","timestamp":1661971815549,"user_tz":300,"elapsed":150,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["df_norm = norm_value(df)\n","df_norm"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only\n","  # This is added back by InteractiveShellApp.init_path()\n"]},{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL431611  Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...   \n","1          CHEMBL316132  Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...   \n","2          CHEMBL304552  Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...   \n","3           CHEMBL85881  Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...   \n","4           CHEMBL85536  Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...   \n","...                 ...                                                ...   \n","3904      CHEMBL4857695  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3905      CHEMBL4869947  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3906      CHEMBL4850252  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3907      CHEMBL4858474  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3908      CHEMBL4514203             O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1   \n","\n","      standard_value_norm  \n","0                     2.5  \n","1                     7.5  \n","2                     3.1  \n","3                     3.9  \n","4                     7.4  \n","...                   ...  \n","3904               2205.0  \n","3905                329.0  \n","3906                261.0  \n","3907                199.0  \n","3908                  2.5  \n","\n","[3909 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-633b0c1b-61d6-4024-8f0a-8bb68dcc064d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>standard_value_norm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL431611</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...</td>\n","      <td>2.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL316132</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>7.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL304552</td>\n","      <td>Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...</td>\n","      <td>3.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL85881</td>\n","      <td>Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>3.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL85536</td>\n","      <td>Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...</td>\n","      <td>7.4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3904</th>\n","      <td>CHEMBL4857695</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>2205.0</td>\n","    </tr>\n","    <tr>\n","      <th>3905</th>\n","      <td>CHEMBL4869947</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>329.0</td>\n","    </tr>\n","    <tr>\n","      <th>3906</th>\n","      <td>CHEMBL4850252</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>261.0</td>\n","    </tr>\n","    <tr>\n","      <th>3907</th>\n","      <td>CHEMBL4858474</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>199.0</td>\n","    </tr>\n","    <tr>\n","      <th>3908</th>\n","      <td>CHEMBL4514203</td>\n","      <td>O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1</td>\n","      <td>2.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3909 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-633b0c1b-61d6-4024-8f0a-8bb68dcc064d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-633b0c1b-61d6-4024-8f0a-8bb68dcc064d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-633b0c1b-61d6-4024-8f0a-8bb68dcc064d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"hb1eKrIjRiH9","outputId":"ece2c426-c355-4953-a9d4-bec9ca0c8385","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661971820962,"user_tz":300,"elapsed":148,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["df_norm.standard_value_norm.describe()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    3.909000e+03\n","mean     2.202800e+04\n","std      1.535920e+05\n","min      2.000000e-03\n","25%      7.500000e+00\n","50%      1.720000e+02\n","75%      5.000000e+03\n","max      5.000000e+06\n","Name: standard_value_norm, dtype: float64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"UDKZzmK57YnS","outputId":"2cadf525-d8c5-46cf-d0aa-a2fb7d29282d","colab":{"base_uri":"https://localhost:8080/","height":473},"executionInfo":{"status":"ok","timestamp":1661974449504,"user_tz":300,"elapsed":152,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["df_final = pIC50(df_norm)\n","df_final"],"execution_count":45,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only\n","  del sys.path[0]\n"]},{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL431611  Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...   \n","1          CHEMBL316132  Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...   \n","2          CHEMBL304552  Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...   \n","3           CHEMBL85881  Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...   \n","4           CHEMBL85536  Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...   \n","...                 ...                                                ...   \n","3904      CHEMBL4857695  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3905      CHEMBL4869947  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3906      CHEMBL4850252  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3907      CHEMBL4858474  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3908      CHEMBL4514203             O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1   \n","\n","         pIC50  \n","0     8.602060  \n","1     8.124939  \n","2     8.508638  \n","3     8.408935  \n","4     8.130768  \n","...        ...  \n","3904  5.656591  \n","3905  6.482804  \n","3906  6.583359  \n","3907  6.701147  \n","3908  8.602060  \n","\n","[3909 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-439084b1-1d9f-4522-a4a7-fed5cd1c3a5b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>pIC50</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL431611</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...</td>\n","      <td>8.602060</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL316132</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.124939</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL304552</td>\n","      <td>Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...</td>\n","      <td>8.508638</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL85881</td>\n","      <td>Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.408935</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL85536</td>\n","      <td>Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.130768</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3904</th>\n","      <td>CHEMBL4857695</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>5.656591</td>\n","    </tr>\n","    <tr>\n","      <th>3905</th>\n","      <td>CHEMBL4869947</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>6.482804</td>\n","    </tr>\n","    <tr>\n","      <th>3906</th>\n","      <td>CHEMBL4850252</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>6.583359</td>\n","    </tr>\n","    <tr>\n","      <th>3907</th>\n","      <td>CHEMBL4858474</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>6.701147</td>\n","    </tr>\n","    <tr>\n","      <th>3908</th>\n","      <td>CHEMBL4514203</td>\n","      <td>O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1</td>\n","      <td>8.602060</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3909 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-439084b1-1d9f-4522-a4a7-fed5cd1c3a5b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-439084b1-1d9f-4522-a4a7-fed5cd1c3a5b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-439084b1-1d9f-4522-a4a7-fed5cd1c3a5b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["df2 = df_final.drop_duplicates(['molecule_chembl_id'])\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"2aZYWJKzXkvy","executionInfo":{"status":"ok","timestamp":1661974460627,"user_tz":300,"elapsed":182,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}},"outputId":"f8405acf-6a81-44a3-c4c4-aa3d7b381977"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL431611  Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...   \n","1          CHEMBL316132  Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...   \n","2          CHEMBL304552  Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...   \n","3           CHEMBL85881  Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...   \n","4           CHEMBL85536  Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...   \n","...                 ...                                                ...   \n","3859      CHEMBL4857695  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3860      CHEMBL4869947  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3861      CHEMBL4850252  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3862      CHEMBL4858474  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3908      CHEMBL4514203             O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1   \n","\n","         pIC50  \n","0     8.602060  \n","1     8.124939  \n","2     8.508638  \n","3     8.408935  \n","4     8.130768  \n","...        ...  \n","3859  6.703335  \n","3860  7.494850  \n","3861  7.356547  \n","3862  7.045757  \n","3908  8.602060  \n","\n","[2915 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-028f37cc-a963-494a-80c6-e51c741c4f57\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>pIC50</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL431611</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...</td>\n","      <td>8.602060</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL316132</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.124939</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL304552</td>\n","      <td>Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...</td>\n","      <td>8.508638</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL85881</td>\n","      <td>Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.408935</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL85536</td>\n","      <td>Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.130768</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3859</th>\n","      <td>CHEMBL4857695</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>6.703335</td>\n","    </tr>\n","    <tr>\n","      <th>3860</th>\n","      <td>CHEMBL4869947</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>7.494850</td>\n","    </tr>\n","    <tr>\n","      <th>3861</th>\n","      <td>CHEMBL4850252</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>7.356547</td>\n","    </tr>\n","    <tr>\n","      <th>3862</th>\n","      <td>CHEMBL4858474</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>7.045757</td>\n","    </tr>\n","    <tr>\n","      <th>3908</th>\n","      <td>CHEMBL4514203</td>\n","      <td>O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1</td>\n","      <td>8.602060</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2915 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-028f37cc-a963-494a-80c6-e51c741c4f57')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-028f37cc-a963-494a-80c6-e51c741c4f57 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-028f37cc-a963-494a-80c6-e51c741c4f57');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["df3 = df2[df2.canonical_smiles.notna()]\n","df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"S57cpIA0bOIT","executionInfo":{"status":"ok","timestamp":1661974973848,"user_tz":300,"elapsed":169,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}},"outputId":"664a2f82-ad7c-488f-f603-d84e994bd750"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL431611  Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...   \n","1          CHEMBL316132  Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...   \n","2          CHEMBL304552  Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...   \n","3           CHEMBL85881  Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...   \n","4           CHEMBL85536  Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...   \n","...                 ...                                                ...   \n","3859      CHEMBL4857695  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3860      CHEMBL4869947  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3861      CHEMBL4850252  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3862      CHEMBL4858474  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3908      CHEMBL4514203             O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1   \n","\n","         pIC50  \n","0     8.602060  \n","1     8.124939  \n","2     8.508638  \n","3     8.408935  \n","4     8.130768  \n","...        ...  \n","3859  6.703335  \n","3860  7.494850  \n","3861  7.356547  \n","3862  7.045757  \n","3908  8.602060  \n","\n","[2907 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-73dd9fc3-246d-4fa8-b09a-f5360792ef9d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>pIC50</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL431611</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...</td>\n","      <td>8.602060</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL316132</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.124939</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL304552</td>\n","      <td>Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...</td>\n","      <td>8.508638</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL85881</td>\n","      <td>Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.408935</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL85536</td>\n","      <td>Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.130768</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3859</th>\n","      <td>CHEMBL4857695</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>6.703335</td>\n","    </tr>\n","    <tr>\n","      <th>3860</th>\n","      <td>CHEMBL4869947</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>7.494850</td>\n","    </tr>\n","    <tr>\n","      <th>3861</th>\n","      <td>CHEMBL4850252</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>7.356547</td>\n","    </tr>\n","    <tr>\n","      <th>3862</th>\n","      <td>CHEMBL4858474</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>7.045757</td>\n","    </tr>\n","    <tr>\n","      <th>3908</th>\n","      <td>CHEMBL4514203</td>\n","      <td>O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1</td>\n","      <td>8.602060</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2907 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73dd9fc3-246d-4fa8-b09a-f5360792ef9d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-73dd9fc3-246d-4fa8-b09a-f5360792ef9d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-73dd9fc3-246d-4fa8-b09a-f5360792ef9d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["df4 = df3.drop_duplicates(['canonical_smiles'])\n","df4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"F-LOh2gybgoI","executionInfo":{"status":"ok","timestamp":1661975519625,"user_tz":300,"elapsed":213,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}},"outputId":"43c3188b-38b8-4d78-c14e-23415e3cdc3b"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL431611  Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...   \n","1          CHEMBL316132  Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...   \n","2          CHEMBL304552  Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...   \n","3           CHEMBL85881  Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...   \n","4           CHEMBL85536  Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...   \n","...                 ...                                                ...   \n","3859      CHEMBL4857695  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3860      CHEMBL4869947  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3861      CHEMBL4850252  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3862      CHEMBL4858474  Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...   \n","3908      CHEMBL4514203             O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1   \n","\n","         pIC50  \n","0     8.602060  \n","1     8.124939  \n","2     8.508638  \n","3     8.408935  \n","4     8.130768  \n","...        ...  \n","3859  6.703335  \n","3860  7.494850  \n","3861  7.356547  \n","3862  7.045757  \n","3908  8.602060  \n","\n","[2907 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-ad2ceede-da22-407c-8c6b-be9045e1a2d8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>pIC50</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL431611</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCC1)[C@H](c1ccc(OCCN3CC...</td>\n","      <td>8.602060</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL316132</td>\n","      <td>Oc1ccc2c(c1)S[C@H](C1CCCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.124939</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL304552</td>\n","      <td>Oc1ccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCN3CCC...</td>\n","      <td>8.508638</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL85881</td>\n","      <td>Oc1ccc2c(c1)S[C@H](CC1CCCCC1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.408935</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL85536</td>\n","      <td>Oc1ccc2c(c1)S[C@H](Cc1ccccc1)[C@H](c1ccc(OCCN3...</td>\n","      <td>8.130768</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3859</th>\n","      <td>CHEMBL4857695</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>6.703335</td>\n","    </tr>\n","    <tr>\n","      <th>3860</th>\n","      <td>CHEMBL4869947</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>7.494850</td>\n","    </tr>\n","    <tr>\n","      <th>3861</th>\n","      <td>CHEMBL4850252</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>7.356547</td>\n","    </tr>\n","    <tr>\n","      <th>3862</th>\n","      <td>CHEMBL4858474</td>\n","      <td>Cc1cccc(CN(CC2(c3ccccc3F)CCCC2)c2ccc(OCCn3cc(C...</td>\n","      <td>7.045757</td>\n","    </tr>\n","    <tr>\n","      <th>3908</th>\n","      <td>CHEMBL4514203</td>\n","      <td>O[C@]1(C(F)(F)F)CCCC[C@H]1Nc1ccc(F)cc1</td>\n","      <td>8.602060</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2907 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad2ceede-da22-407c-8c6b-be9045e1a2d8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ad2ceede-da22-407c-8c6b-be9045e1a2d8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ad2ceede-da22-407c-8c6b-be9045e1a2d8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["#df_final.to_csv('bioactivity_pIC50_ERA_1.csv', index=False)\n","df4.to_csv('bioactivity_pIC50_ERA.csv', index=False)"],"metadata":{"id":"6nh-qJNWjajC","executionInfo":{"status":"ok","timestamp":1661975110964,"user_tz":300,"elapsed":365,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","metadata":{"id":"BoqY53udSTYC","outputId":"1c815185-7f27-475b-846b-f0a14c274862","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661975171756,"user_tz":300,"elapsed":148,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"source":["df4.pIC50.describe()"],"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    2907.000000\n","mean        6.485265\n","std         1.662386\n","min         2.301030\n","25%         5.008805\n","50%         6.337242\n","75%         7.687292\n","max        11.698970\n","Name: pIC50, dtype: float64"]},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["(ii) identical SMILES notation (iii) IC50 value greater than 2 SD (i.e. if less than 2 SD then the median value is used)"],"metadata":{"id":"_yuSSauDP1Ys"}},{"cell_type":"code","metadata":{"id":"LMWOG2UIXEg-","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1661975937193,"user_tz":300,"elapsed":196,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}},"outputId":"62e08a50-fe73-420d-990f-6a9d8057404e"},"source":["df5=df_final.groupby(['molecule_chembl_id', 'canonical_smiles'],as_index=False).mean()\n","df5"],"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL100231  CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...   \n","1          CHEMBL100595  CC(C)c1cccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCC...   \n","2          CHEMBL100617  CC1(c2ccc(OCCN3CCCCC3)cc2)c2ccc(O)cc2CCN1c1ccc...   \n","3          CHEMBL100763  CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccc(...   \n","4             CHEMBL101              CCCCC1C(=O)N(c2ccccc2)N(c2ccccc2)C1=O   \n","...                 ...                                                ...   \n","2902        CHEMBL94225  Oc1cccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCNC3C...   \n","2903        CHEMBL94280   Oc1ccc2c(c1)CCN(Cc1ccccc1)C2c1ccc(OCCN2CCCC2)cc1   \n","2904          CHEMBL954    CCN(CC)CCOc1ccc(/C(=C(/Cl)c2ccccc2)c2ccccc2)cc1   \n","2905        CHEMBL98470  CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...   \n","2906        CHEMBL98558   CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccccc1   \n","\n","         pIC50  \n","0     7.716430  \n","1     7.565070  \n","2     8.311870  \n","3     8.025010  \n","4     4.301030  \n","...        ...  \n","2902  8.688375  \n","2903  8.327902  \n","2904  8.340654  \n","2905  7.970910  \n","2906  8.077480  \n","\n","[2907 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-968f16d6-9005-4d86-9ff4-92c9432060d4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>pIC50</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL100231</td>\n","      <td>CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...</td>\n","      <td>7.716430</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL100595</td>\n","      <td>CC(C)c1cccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCC...</td>\n","      <td>7.565070</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL100617</td>\n","      <td>CC1(c2ccc(OCCN3CCCCC3)cc2)c2ccc(O)cc2CCN1c1ccc...</td>\n","      <td>8.311870</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL100763</td>\n","      <td>CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccc(...</td>\n","      <td>8.025010</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL101</td>\n","      <td>CCCCC1C(=O)N(c2ccccc2)N(c2ccccc2)C1=O</td>\n","      <td>4.301030</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2902</th>\n","      <td>CHEMBL94225</td>\n","      <td>Oc1cccc([C@H]2Sc3cc(O)ccc3O[C@H]2c2ccc(OCCNC3C...</td>\n","      <td>8.688375</td>\n","    </tr>\n","    <tr>\n","      <th>2903</th>\n","      <td>CHEMBL94280</td>\n","      <td>Oc1ccc2c(c1)CCN(Cc1ccccc1)C2c1ccc(OCCN2CCCC2)cc1</td>\n","      <td>8.327902</td>\n","    </tr>\n","    <tr>\n","      <th>2904</th>\n","      <td>CHEMBL954</td>\n","      <td>CCN(CC)CCOc1ccc(/C(=C(/Cl)c2ccccc2)c2ccccc2)cc1</td>\n","      <td>8.340654</td>\n","    </tr>\n","    <tr>\n","      <th>2905</th>\n","      <td>CHEMBL98470</td>\n","      <td>CC(C)c1ccc(N2CCc3cc(O)ccc3C2(C)c2ccc(OCCN3CCCC...</td>\n","      <td>7.970910</td>\n","    </tr>\n","    <tr>\n","      <th>2906</th>\n","      <td>CHEMBL98558</td>\n","      <td>CC1(c2ccc(OCCN3CCCC3)cc2)c2ccc(O)cc2CCN1c1ccccc1</td>\n","      <td>8.077480</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2907 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-968f16d6-9005-4d86-9ff4-92c9432060d4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-968f16d6-9005-4d86-9ff4-92c9432060d4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-968f16d6-9005-4d86-9ff4-92c9432060d4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["df5.to_csv('bioactivity_pIC50_ERA_new.csv', index=False)"],"metadata":{"id":"dCli0oBMaglP","executionInfo":{"status":"ok","timestamp":1661976923250,"user_tz":300,"elapsed":151,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["df4 = df_final.groupby('molecule_chembl_id').std()\n","df4[(df4.pIC50 < 2) & (df3.pIC50 == pd.NA)]\n","df4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"id":"7GTRzFeHQr_Z","executionInfo":{"status":"ok","timestamp":1661973159978,"user_tz":300,"elapsed":10,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}},"outputId":"1f5a39f8-3e4b-487a-f6e2-b5e66fe4d183"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       pIC50\n","molecule_chembl_id          \n","CHEMBL100231        0.655369\n","CHEMBL100595        0.263236\n","CHEMBL100617        0.973521\n","CHEMBL100763        0.526789\n","CHEMBL101                NaN\n","...                      ...\n","CHEMBL94225         0.328725\n","CHEMBL94280              NaN\n","CHEMBL954                NaN\n","CHEMBL98470         0.709120\n","CHEMBL98558         0.770654\n","\n","[2915 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-f70a2cc2-5a55-43e7-b5eb-138d00cd4a54\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pIC50</th>\n","    </tr>\n","    <tr>\n","      <th>molecule_chembl_id</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>CHEMBL100231</th>\n","      <td>0.655369</td>\n","    </tr>\n","    <tr>\n","      <th>CHEMBL100595</th>\n","      <td>0.263236</td>\n","    </tr>\n","    <tr>\n","      <th>CHEMBL100617</th>\n","      <td>0.973521</td>\n","    </tr>\n","    <tr>\n","      <th>CHEMBL100763</th>\n","      <td>0.526789</td>\n","    </tr>\n","    <tr>\n","      <th>CHEMBL101</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>CHEMBL94225</th>\n","      <td>0.328725</td>\n","    </tr>\n","    <tr>\n","      <th>CHEMBL94280</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>CHEMBL954</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>CHEMBL98470</th>\n","      <td>0.709120</td>\n","    </tr>\n","    <tr>\n","      <th>CHEMBL98558</th>\n","      <td>0.770654</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2915 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f70a2cc2-5a55-43e7-b5eb-138d00cd4a54')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f70a2cc2-5a55-43e7-b5eb-138d00cd4a54 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f70a2cc2-5a55-43e7-b5eb-138d00cd4a54');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df5.pIC50.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vHJhDXEpTwRs","executionInfo":{"status":"ok","timestamp":1661976967285,"user_tz":300,"elapsed":179,"user":{"displayName":"nusrat jahan","userId":"16328812850497088601"}},"outputId":"6c307b3a-7a02-48f8-e4e1-f032f445bdef"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    2907.000000\n","mean        6.446654\n","std         1.623823\n","min         2.301030\n","25%         5.012041\n","50%         6.318759\n","75%         7.619789\n","max        11.698970\n","Name: pIC50, dtype: float64"]},"metadata":{},"execution_count":63}]}]}